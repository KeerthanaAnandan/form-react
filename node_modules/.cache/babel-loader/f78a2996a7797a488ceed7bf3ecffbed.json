{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keerthu\\\\Desktop\\\\I Write Code\\\\React js\\\\squash-apps-form\\\\src\\\\Components\\\\PersonalDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./PersonalDetails.css\";\nimport { Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PersonalDetails() {\n  _s();\n\n  const [countryList, setCountryList] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [selectedCountryCode, setSelectedCountryCode] = useState(\"\"); // const [hasCountryCode , setHasCountryCode] = useState(false);\n\n  const [stateList, setStateList] = useState([]);\n  const [flag, setFlag] = useState(\"\");\n  const [alphaCode, setAlphaCode] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await fetch(\"https://restcountries.eu/rest/v2/all\");\n      const items = await data.json();\n      console.log(items);\n      setCountryList(items);\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (selectedCountry) {\n      const filtered = countryList.filter(count => {\n        return count.name == selectedCountry;\n      }); // setHasCountryCode(true)\n\n      console.log(filtered); // console.log(filtered[0].callingCodes.toString());\n      // console.log(filtered[0].alpha2Code)\n\n      console.log(filtered[0].flag);\n      console.log(filtered[0].alpha2Code);\n      setSelectedCountryCode(filtered[0].callingCodes.toString());\n      setFlag(filtered[0].flag);\n      setAlphaCode(filtered[0].alpha2Code);\n\n      if (alphaCode) {\n        const API_KEY = \"RkNhMzVFREhJV3RXZjBQbzFvTHJGQ090U1paQUdaamFPOEFtNzJEUw==\";\n        var headers = new Headers();\n        headers.append(\"X-CSCAPI-KEY\", API_KEY);\n        var requestOptions = {\n          method: 'GET',\n          headers: headers,\n          redirect: 'follow'\n        };\n\n        const fetchStates = async () => {\n          const data = await fetch(`https://api.countrystatecity.in/v1/countries/${alphaCode}/states`, requestOptions);\n          const items = await data.json();\n          console.log(items);\n          setStateList(items);\n        };\n\n        fetchStates(); // fetch(`https://api.countrystatecity.in/v1/countries/${alphaCode}/states`, requestOptions)\n        //   .then(response => response.json() )\n        //   .then(result =>   setStateList(result))\n        //   .catch(error => console.log('error', error));\n      }\n    }\n  }, [selectedCountry, alphaCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"i am personal\", /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: '',\n        country: '',\n        states: ''\n      },\n      validate: values => {\n        setSelectedCountry(values.country);\n        const errors = {};\n\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 12\n        }, this), errors.email && touched.email && errors.email, /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"country\",\n          name: \"country\",\n          value: values.country,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            label: \"Select a country ... \",\n            defaultValue: \"selected\",\n            children: \"Select a country ... \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 9\n          }, this), countryList.map(single => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: single.name,\n            label: single.name,\n            children: single.name\n          }, single.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 7\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            id: \"states\",\n            name: \"states\",\n            value: values.states,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              label: \"Select a state ... \",\n              defaultValue: \"selected\",\n              children: \"Select a state ... \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 9\n            }, this), stateList.map(single => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: single.name,\n              label: single.name,\n              children: single.name\n            }, single.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 7\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inputWithIcon inputIconBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedCountryCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedCountryCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: flag,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PersonalDetails, \"S6WiTnXzYco/GTQM/QjwhdWNVek=\");\n\n_c = PersonalDetails;\nexport default PersonalDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonalDetails\");","map":{"version":3,"sources":["C:/Users/keerthu/Desktop/I Write Code/React js/squash-apps-form/src/Components/PersonalDetails.js"],"names":["React","useEffect","useState","Formik","PersonalDetails","countryList","setCountryList","selectedCountry","setSelectedCountry","selectedCountryCode","setSelectedCountryCode","stateList","setStateList","flag","setFlag","alphaCode","setAlphaCode","fetchData","data","fetch","items","json","console","log","filtered","filter","count","name","alpha2Code","callingCodes","toString","API_KEY","headers","Headers","append","requestOptions","method","redirect","fetchStates","email","password","country","states","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting","map","single","id"],"mappings":"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","sourcesContent":["import React , {useEffect , useState} from 'react';\r\nimport \"./PersonalDetails.css\";\r\nimport { Formik } from 'formik';\r\n\r\nfunction PersonalDetails() {\r\n  const[countryList , setCountryList] = useState([]);\r\n  const [selectedCountry , setSelectedCountry] = useState(\"\");\r\n  const [selectedCountryCode , setSelectedCountryCode] = useState(\"\");\r\n  // const [hasCountryCode , setHasCountryCode] = useState(false);\r\n  const [stateList , setStateList] = useState([])\r\n  const [flag , setFlag] = useState(\"\")\r\n  const [alphaCode , setAlphaCode] = useState(\"\")\r\n  useEffect(() =>{\r\n    const fetchData = async() => {\r\n      const data = await fetch(\"https://restcountries.eu/rest/v2/all\");\r\n      const items = await data.json();\r\n      console.log(items)\r\n      setCountryList(items)\r\n    }\r\n    fetchData()\r\n  } , []);\r\n\r\n  useEffect(() =>{\r\n   \r\n    if(selectedCountry){\r\n      const filtered =   countryList.filter(count =>{ return count.name == selectedCountry});\r\n      // setHasCountryCode(true)\r\n      console.log(filtered);\r\n    \r\n        // console.log(filtered[0].callingCodes.toString());\r\n        // console.log(filtered[0].alpha2Code)\r\n        console.log(filtered[0].flag)\r\n        console.log(filtered[0].alpha2Code)\r\n       setSelectedCountryCode(filtered[0].callingCodes.toString());\r\n       setFlag(filtered[0].flag)\r\n       setAlphaCode(filtered[0].alpha2Code)\r\n      \r\n   \r\n \r\n       if(alphaCode){\r\n    const  API_KEY = \"RkNhMzVFREhJV3RXZjBQbzFvTHJGQ090U1paQUdaamFPOEFtNzJEUw==\"\r\n      var headers = new Headers();\r\nheaders.append(\"X-CSCAPI-KEY\", API_KEY);\r\n\r\nvar requestOptions = {\r\n  method: 'GET',\r\n  headers: headers,\r\n  redirect: 'follow',\r\n \r\n};\r\nconst fetchStates = async() => {\r\n  const data = await fetch(`https://api.countrystatecity.in/v1/countries/${alphaCode}/states` , requestOptions);\r\n  const items = await data.json();\r\n  console.log(items)\r\n  setStateList(items)\r\n}\r\nfetchStates()\r\n\r\n\r\n\r\n// fetch(`https://api.countrystatecity.in/v1/countries/${alphaCode}/states`, requestOptions)\r\n//   .then(response => response.json() )\r\n//   .then(result =>   setStateList(result))\r\n//   .catch(error => console.log('error', error));\r\n\r\n}\r\n    }\r\n    },[selectedCountry , alphaCode])\r\n \r\n    return (\r\n        <div>\r\n           i am personal \r\n\r\n     <Formik\r\n       initialValues={{ email: '', password: '' , country: '', states : '',}}\r\n       validate={values => {\r\n        setSelectedCountry(values.country)\r\n         const errors = {};\r\n         if (!values.email) {\r\n           errors.email = 'Required';\r\n         } else if (\r\n           !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n         ) {\r\n           errors.email = 'Invalid email address';\r\n         }\r\n         return errors;\r\n         \r\n       }}\r\n       onSubmit={(values, { setSubmitting }) => {\r\n         setTimeout(() => {\r\n           alert(JSON.stringify(values, null, 2));\r\n           setSubmitting(false);\r\n         }, 400);\r\n        \r\n         \r\n       }}\r\n     >\r\n       {({\r\n         values,\r\n         errors,\r\n         touched,\r\n         handleChange,\r\n         handleBlur,\r\n         handleSubmit,\r\n         isSubmitting,\r\n         \r\n         /* and other goodies */\r\n         \r\n       }) => (\r\n         <form onSubmit={handleSubmit}>\r\n           <input\r\n             type=\"email\"\r\n             name=\"email\"\r\n             onChange={handleChange}\r\n             onBlur={handleBlur}\r\n             value={values.email}\r\n           />\r\n           {errors.email && touched.email && errors.email}\r\n           {/* <input\r\n             type=\"password\"\r\n             name=\"password\"\r\n             onChange={handleChange}\r\n             onBlur={handleBlur}\r\n             value={values.password}\r\n           />\r\n           {errors.password && touched.password && errors.password} */}\r\n          \r\n           {/* my own form */}\r\n  \r\n\r\n   \r\n    {/* country*/ }\r\n     <select  className=\"form-control\" id=\"country\" name=\"country\" value={values.country}  onChange={handleChange} >\r\n        <option value=\"0\" label=\"Select a country ... \" defaultValue=\"selected\" >Select a country ... </option>\r\n      \r\n           \r\n            \r\n          \r\n     {countryList.map(single => (\r\n        \r\n      <option key={single.name} value={single.name} label={single.name}>{single.name}</option>\r\n     ))}\r\n       </select>\r\n       {/*state */}\r\n       <div>\r\n        <select  className=\"form-control\" id=\"states\" name=\"states\" value={values.states}  onChange={handleChange} >\r\n        <option value=\"0\" label=\"Select a state ... \" defaultValue=\"selected\" >Select a state ... </option>\r\n      \r\n           \r\n            \r\n          \r\n     {stateList.map(single => (\r\n        \r\n      <option key={single.id} value={single.name} label={single.name}>{single.name}</option>\r\n     ))}\r\n       </select> \r\n       </div>\r\n       <div class=\"inputWithIcon inputIconBg\">\r\n       <span>{selectedCountryCode}</span>\r\n  <input type=\"text\" placeholder=\"Phone Number\" />\r\n  <span>{selectedCountryCode}</span>\r\n  {/* <i className=\"fa fa-phone fa-lg fa-fw\" aria-hidden=\"true\"></i> */}\r\n  <img src={flag} alt=\"\" />\r\n  \r\n</div>\r\n\r\n       <button type=\"submit\" disabled={isSubmitting}>\r\n             Submit\r\n           </button>\r\n         </form>\r\n       )}\r\n      \r\n       </Formik>\r\n       {/* <h1>{selectedCountry}</h1> */}\r\n       {/* {hasCountryCode ?  <h1>{selectedCountryCode}</h1> : null } */}\r\n      \r\n       {/* <h1>{selectedCountryCode.countrycode}</h1> */}\r\n       {/* <h1>{selectedCountryCode.map(single => {\r\n         <div>\r\n        <p>{single.name}</p>\r\n        <p>{single.alpha2Code}</p>\r\n         </div>\r\n       })}</h1> */}\r\n       {/* <h1>{selectedCountryCode}</h1> */}\r\n       {/* <h1>{selectedCountryCode}</h1>\r\n       <img src={flag} alt=\"\" /> */}\r\n       \r\n       {/* <h1>{stateList}</h1> */}\r\n          {/* {stateList.map(single => (\r\n        \r\n       <h1>{single.name}</h1>\r\n       ))}   */}\r\n   </div>\r\n );\r\n \r\n  \r\n    \r\n       }\r\n\r\nexport default PersonalDetails\r\n"]},"metadata":{},"sourceType":"module"}