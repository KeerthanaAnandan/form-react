{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keerthu\\\\Desktop\\\\I Write Code\\\\React js\\\\squash-apps-form\\\\src\\\\Components\\\\PersonalDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./PersonalDetails.css\";\nimport { Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PersonalDetails() {\n  _s();\n\n  const [countryList, setCountryList] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [selectedCountryCode, setSelectedCountryCode] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await fetch(\"https://restcountries.eu/rest/v2/all\");\n      const items = await data.json();\n      console.log(items);\n      setCountryList(items);\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    let filtered = countryList.filter(count => {\n      return count.name == selectedCountry;\n    });\n    console.log(filtered);\n    console.log(filtered.name);\n    setSelectedCountryCode([filtered]);\n  }, [selectedCountry]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"i am personal\", /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: '',\n        country: ''\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n        setSelectedCountry(values.country);\n      },\n      children: ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 12\n        }, this), errors.email && touched.email && errors.email, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 12\n        }, this), errors.password && touched.password && errors.password, /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"country\",\n          class: \"form-control\",\n          id: \"country\",\n          name: \"country\",\n          value: values.country,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            label: \"Select a country ... \",\n            selected: \"selected\",\n            children: \"Select a country ... \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }, this), countryList.map(single => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: single.name,\n            label: single.name,\n            children: single.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 7\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: selectedCountry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: selectedCountryCode.map(single => {\n        /*#__PURE__*/\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: single.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: single.alpha2Code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PersonalDetails, \"4IO4TR7M2f5x4AYh9CMQdBi1Nzc=\");\n\n_c = PersonalDetails;\nexport default PersonalDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonalDetails\");","map":{"version":3,"sources":["C:/Users/keerthu/Desktop/I Write Code/React js/squash-apps-form/src/Components/PersonalDetails.js"],"names":["React","useEffect","useState","Formik","PersonalDetails","countryList","setCountryList","selectedCountry","setSelectedCountry","selectedCountryCode","setSelectedCountryCode","fetchData","data","fetch","items","json","console","log","filtered","filter","count","name","email","password","country","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting","map","single","alpha2Code"],"mappings":"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","sourcesContent":["import React , {useEffect , useState} from 'react';\r\nimport \"./PersonalDetails.css\";\r\nimport { Formik } from 'formik';\r\n\r\nfunction PersonalDetails() {\r\n  const[countryList , setCountryList] = useState([]);\r\n  const [selectedCountry , setSelectedCountry] = useState(\"\");\r\n  const [selectedCountryCode , setSelectedCountryCode] = useState([]);\r\n  useEffect(() =>{\r\n    const fetchData = async() => {\r\n      const data = await fetch(\"https://restcountries.eu/rest/v2/all\");\r\n      const items = await data.json();\r\n      console.log(items)\r\n      setCountryList(items)\r\n    }\r\n    fetchData()\r\n  } , [])\r\n\r\n  useEffect(() =>{\r\n  let filtered =   countryList.filter(count =>{ return count.name == selectedCountry})\r\n  console.log(filtered)\r\n  console.log(filtered.name)\r\n  setSelectedCountryCode([filtered])\r\n  } , [selectedCountry])\r\n \r\n    return (\r\n        <div>\r\n           i am personal \r\n\r\n     <Formik\r\n       initialValues={{ email: '', password: '' , country: '',}}\r\n       validate={values => {\r\n         const errors = {};\r\n         if (!values.email) {\r\n           errors.email = 'Required';\r\n         } else if (\r\n           !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n         ) {\r\n           errors.email = 'Invalid email address';\r\n         }\r\n         return errors;\r\n       }}\r\n       onSubmit={(values, { setSubmitting }) => {\r\n         setTimeout(() => {\r\n           alert(JSON.stringify(values, null, 2));\r\n           setSubmitting(false);\r\n         }, 400);\r\n         setSelectedCountry(values.country)\r\n         \r\n       }}\r\n     >\r\n       {({\r\n         values,\r\n         errors,\r\n         touched,\r\n         handleChange,\r\n         handleBlur,\r\n         handleSubmit,\r\n         isSubmitting,\r\n         /* and other goodies */\r\n         \r\n       }) => (\r\n         <form onSubmit={handleSubmit}>\r\n           <input\r\n             type=\"email\"\r\n             name=\"email\"\r\n             onChange={handleChange}\r\n             onBlur={handleBlur}\r\n             value={values.email}\r\n           />\r\n           {errors.email && touched.email && errors.email}\r\n           <input\r\n             type=\"password\"\r\n             name=\"password\"\r\n             onChange={handleChange}\r\n             onBlur={handleBlur}\r\n             value={values.password}\r\n           />\r\n           {errors.password && touched.password && errors.password}\r\n          \r\n           {/* my own form */}\r\n  \r\n\r\n   \r\n    \r\n     <select name=\"country\" class=\"form-control\" id=\"country\" name=\"country\" value={values.country}  onChange={handleChange} >\r\n        <option value=\"0\" label=\"Select a country ... \" selected=\"selected\">Select a country ... </option>\r\n      \r\n           \r\n            \r\n          \r\n     {countryList.map(single => (\r\n        \r\n      <option  value={single.name} label={single.name}>{single.name}</option>\r\n     ))}\r\n       </select>\r\n\r\n\r\n\r\n       <button type=\"submit\" disabled={isSubmitting}>\r\n             Submit\r\n           </button>\r\n         </form>\r\n       )}\r\n       </Formik>\r\n       <h1>{selectedCountry}</h1>\r\n       <h1>{selectedCountryCode.map(single => {\r\n         <>\r\n        <p>{single.name}</p>\r\n        <p>{single.alpha2Code}</p>\r\n         </>\r\n       })}</h1>\r\n       {/* <h1>{selectedCountryCode}</h1> */}\r\n   </div>\r\n );\r\n \r\n  \r\n    \r\n       }\r\n\r\nexport default PersonalDetails\r\n"]},"metadata":{},"sourceType":"module"}