{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keerthu\\\\Desktop\\\\I Write Code\\\\React js\\\\squash-apps-form\\\\src\\\\Components\\\\CompanyDetails.js\";\nimport React from 'react';\nimport FileUpload from './FileUpload';\nimport \"./CompanyDetails.css\";\nimport { Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CompanyDetails() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"companyDetails\",\n    children: [/*#__PURE__*/_jsxDEV(FileUpload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          CompanyName: '',\n          email: '',\n          JobTitle: '',\n          YearsOfExperience: ''\n        } //  validate={values => {\n        //    const errors = {};\n        //    if (!values.email) {\n        //      errors.email = 'Required';\n        //    } else if (\n        //      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        //    ) {\n        //      errors.email = 'Invalid email address';\n        //    }\n        //    return errors;\n        //  }}\n        ,\n        onSubmit: (values, {\n          setSubmitting\n        }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        },\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting\n          /* and other goodies */\n\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"CompanyName\",\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"CompanyName\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.CompanyName,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.email,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 12\n            }, this), errors.email && touched.email && errors.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"JobTitle\",\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"JobTitle\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.JobTitle,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"YearsOfExperience\",\n              children: \"Years of Experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"YearsOfExperience\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.YearsOfExperience,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"TermsAndConditions\",\n              id: \"\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"TermsAndConditions\",\n              children: \" I accept to terms and conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isSubmitting,\n              className: \"back-btn\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isSubmitting,\n              className: \"next-btn\",\n              children: \"Send OTP !\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = CompanyDetails;\nexport default CompanyDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyDetails\");","map":{"version":3,"sources":["C:/Users/keerthu/Desktop/I Write Code/React js/squash-apps-form/src/Components/CompanyDetails.js"],"names":["React","FileUpload","Formik","CompanyDetails","CompanyName","email","JobTitle","YearsOfExperience","values","setSubmitting","setTimeout","alert","JSON","stringify","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FileUpload from './FileUpload';\r\nimport \"./CompanyDetails.css\"\r\nimport { Formik } from 'formik';\r\n\r\nfunction CompanyDetails() {\r\n    return (\r\n        <div className=\"companyDetails\">\r\n          \r\n            <FileUpload />\r\n           {/*Formik code */}\r\n           <div className=\"inputs\">\r\n     <Formik\r\n       initialValues={{ CompanyName: '' , email: '', JobTitle: '', YearsOfExperience:''}}\r\n      //  validate={values => {\r\n      //    const errors = {};\r\n      //    if (!values.email) {\r\n      //      errors.email = 'Required';\r\n      //    } else if (\r\n      //      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n      //    ) {\r\n      //      errors.email = 'Invalid email address';\r\n      //    }\r\n      //    return errors;\r\n      //  }}\r\n       onSubmit={(values, { setSubmitting }) => {\r\n         setTimeout(() => {\r\n           alert(JSON.stringify(values, null, 2));\r\n           setSubmitting(false);\r\n         }, 400);\r\n       }}\r\n     >\r\n       {({\r\n         values,\r\n         errors,\r\n         touched,\r\n         handleChange,\r\n         handleBlur,\r\n         handleSubmit,\r\n         isSubmitting,\r\n         /* and other goodies */\r\n       }) => (\r\n         <form onSubmit={handleSubmit}>\r\n             <div className=\"single-input\">\r\n             <label htmlFor=\"CompanyName\">Company Name</label>\r\n             <input\r\n             type=\"text\"\r\n             name=\"CompanyName\"\r\n             onChange={handleChange}\r\n             onBlur={handleBlur}\r\n             value={values.CompanyName}\r\n             required\r\n           />\r\n             </div>\r\n \r\n<div className=\"single-input\">\r\n<label htmlFor=\"email\">Email Id</label>\r\n           <input\r\n             type=\"email\"\r\n             name=\"email\"\r\n             onChange={handleChange}\r\n             onBlur={handleBlur}\r\n             value={values.email}\r\n             required\r\n           />\r\n           {errors.email && touched.email && errors.email}\r\n</div>\r\n            \r\n           {/* <input\r\n             type=\"password\"\r\n             name=\"password\"\r\n             onChange={handleChange}\r\n             onBlur={handleBlur}\r\n             value={values.password}\r\n           />\r\n           {errors.password && touched.password && errors.password} */}\r\n       <div className=\"single-input\">\r\n       <label htmlFor=\"JobTitle\">Job Title</label>\r\n        <input\r\n             type=\"text\"\r\n             name=\"JobTitle\"\r\n             onChange={handleChange}\r\n             onBlur={handleBlur}\r\n             value={values.JobTitle}\r\n             required\r\n           />\r\n       </div>\r\n\r\n\r\n    <div className=\"single-input\">\r\n          <label htmlFor=\"YearsOfExperience\">Years of Experience</label>\r\n           <input\r\n             type=\"number\"\r\n             name=\"YearsOfExperience\"\r\n             onChange={handleChange}\r\n             onBlur={handleBlur}\r\n             value={values.YearsOfExperience}\r\n             required\r\n           />\r\n   </div>\r\n\r\n<div>\r\n<input type=\"checkbox\" name=\"TermsAndConditions\" id=\"\" required />\r\n     <label htmlFor=\"TermsAndConditions\"> I accept to terms and conditions</label>\r\n</div>\r\n<div className=\"buttons\">\r\n\r\n<button type=\"submit\" disabled={isSubmitting} className=\"back-btn\">\r\n             Back\r\n           </button>\r\n           <button type=\"submit\" disabled={isSubmitting} className=\"next-btn\">\r\n             Send OTP !\r\n           </button>\r\n</div>\r\n      \r\n         </form>\r\n       )}\r\n     </Formik>\r\n     </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompanyDetails\r\n"]},"metadata":{},"sourceType":"module"}