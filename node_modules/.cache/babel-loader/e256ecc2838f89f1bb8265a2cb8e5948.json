{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keerthu\\\\Desktop\\\\I Write Code\\\\React js\\\\squash-apps-form\\\\src\\\\Components\\\\PersonalDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Typography, Button } from \"@material-ui/core\"; // import { makeStyles } from \"@material-ui/styles\";import \"./PersonalDetails.css\";\n\nimport { Formik } from 'formik'; // import {Link } from 'react-router-dom';\n\nimport \"./PersonalDetails.css\";\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PersonalDetails() {\n  _s();\n\n  const [countryList, setCountryList] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [selectedCountryCode, setSelectedCountryCode] = useState(\"\");\n  const [stateList, setStateList] = useState([]);\n  const [flag, setFlag] = useState(\"\");\n  const [alphaCode, setAlphaCode] = useState(\"\"); // const [enteredNumber , setEnteredNumber] = useState(\"\")\n\n  const [selectedGender, setSelectedGender] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await fetch(\"https://restcountries.eu/rest/v2/all\");\n      const items = await data.json();\n      console.log(items);\n      setCountryList(items);\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (selectedCountry) {\n      const filtered = countryList.filter(count => {\n        return count.name == selectedCountry;\n      }); // console.log(filtered);\n      //   console.log(filtered[0].flag)\n      //   console.log(filtered[0].alpha2Code)\n\n      setSelectedCountryCode(filtered[0].callingCodes.toString());\n      setFlag(filtered[0].flag);\n      setAlphaCode(filtered[0].alpha2Code);\n\n      if (alphaCode) {\n        const API_KEY = \"RkNhMzVFREhJV3RXZjBQbzFvTHJGQ090U1paQUdaamFPOEFtNzJEUw==\";\n        var headers = new Headers();\n        headers.append(\"X-CSCAPI-KEY\", API_KEY);\n        var requestOptions = {\n          method: 'GET',\n          headers: headers,\n          redirect: 'follow'\n        };\n\n        const fetchStates = async () => {\n          const data = await fetch(`https://api.countrystatecity.in/v1/countries/${alphaCode}/states`, requestOptions);\n          const items = await data.json();\n          console.log(items);\n          setStateList(items);\n        };\n\n        fetchStates();\n      }\n    }\n  }, [selectedCountry, alphaCode]);\n\n  const clickHandler = e => {\n    setSelectedGender(e.target.innerHTML);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Add your Personal Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Hic, laborum?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"personalDetails\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          name: '',\n          country: '',\n          states: '',\n          number: ''\n        },\n        validate: values => {\n          setSelectedCountry(values.country);\n          const errors = {};\n\n          if (!values.name) {\n            errors.name = 'Required';\n          } else if (!/^[A-Za-z\\s]+$/i.test(values.name)) {\n            errors.name = 'Invalid name';\n          }\n\n          return errors;\n        },\n        onSubmit: (values, {\n          setSubmitting\n        }) => {\n          setSubmitting(false);\n          localStorage.setItem('name', values.name);\n          localStorage.setItem('country', values.country);\n          localStorage.setItem('state', values.states);\n          localStorage.setItem('number', selectedCountryCode + \"-\" + values.number);\n          localStorage.setItem('gender', selectedGender);\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this);\n        },\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 12\n            }, this), errors.name && touched.name && errors.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gender-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"gender-btn\",\n              onClick: clickHandler,\n              variant: \"outlined\",\n              children: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n              className: \"gender-btn\",\n              onClick: clickHandler,\n              variant: \"outlined\",\n              children: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 13\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n              className: \"gender-btn\",\n              onClick: clickHandler,\n              variant: \"outlined\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this), \"\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"country\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              required: true,\n              className: \"form-control\",\n              id: \"country\",\n              name: \"country\",\n              value: values.country,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"first\",\n                children: \"Please select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 6\n              }, this), countryList.map(single => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: single.name,\n                label: single.name,\n                children: single.name\n              }, single.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 7\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"states\",\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              required: true,\n              className: \"form-control\",\n              id: \"states\",\n              name: \"states\",\n              value: values.states,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"first\",\n                label: \"Select a state ... \",\n                defaultValue: \"selected\",\n                children: \"Select a state ... \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 9\n              }, this), stateList.map(single => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: single.name,\n                label: single.name,\n                children: single.name\n              }, single.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 7\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputWithIcon inputIconBg inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"number\",\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputGroup\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: flag,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"+\", selectedCountryCode]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"number\",\n              className: \"numinput\",\n              placeholder: \"Phone Number\",\n              name: \"number\",\n              value: values.number,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"next-btn\",\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account?   \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"orange\"\n        },\n        children: \"Login In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PersonalDetails, \"XEcaMW06fGhuFpRXmeUKro+jjsg=\");\n\n_c = PersonalDetails;\nexport default PersonalDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonalDetails\");","map":{"version":3,"sources":["C:/Users/keerthu/Desktop/I Write Code/React js/squash-apps-form/src/Components/PersonalDetails.js"],"names":["React","useEffect","useState","Typography","Button","Formik","Redirect","PersonalDetails","countryList","setCountryList","selectedCountry","setSelectedCountry","selectedCountryCode","setSelectedCountryCode","stateList","setStateList","flag","setFlag","alphaCode","setAlphaCode","selectedGender","setSelectedGender","fetchData","data","fetch","items","json","console","log","filtered","filter","count","name","callingCodes","toString","alpha2Code","API_KEY","headers","Headers","append","requestOptions","method","redirect","fetchStates","clickHandler","e","target","innerHTML","country","states","number","values","errors","test","setSubmitting","localStorage","setItem","touched","handleChange","handleBlur","handleSubmit","isSubmitting","map","single","id","color"],"mappings":"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","sourcesContent":["import React , {useEffect , useState} from 'react';\r\nimport { Typography, Button } from \"@material-ui/core\";\r\n// import { makeStyles } from \"@material-ui/styles\";import \"./PersonalDetails.css\";\r\nimport { Formik } from 'formik';\r\n// import {Link } from 'react-router-dom';\r\nimport \"./PersonalDetails.css\";\r\nimport  { Redirect } from 'react-router-dom'\r\n\r\n\r\nfunction PersonalDetails() {\r\n  const[countryList , setCountryList] = useState([]);\r\n  const [selectedCountry , setSelectedCountry] = useState(\"\");\r\n  const [selectedCountryCode , setSelectedCountryCode] = useState(\"\");\r\n  const [stateList , setStateList] = useState([])\r\n  const [flag , setFlag] = useState(\"\")\r\n  const [alphaCode , setAlphaCode] = useState(\"\")\r\n  // const [enteredNumber , setEnteredNumber] = useState(\"\")\r\n  const [selectedGender , setSelectedGender] = useState(\"\")\r\n  useEffect(() =>{\r\n    const fetchData = async() => {\r\n      const data = await fetch(\"https://restcountries.eu/rest/v2/all\");\r\n      const items = await data.json();\r\n      console.log(items)\r\n      setCountryList(items)\r\n    }\r\n    fetchData()\r\n  } , []);\r\n\r\n  useEffect(() =>{\r\n   \r\n    if(selectedCountry){\r\n      const filtered =   countryList.filter(count =>{ return count.name == selectedCountry});\r\n     \r\n      // console.log(filtered);\r\n    \r\n        \r\n      //   console.log(filtered[0].flag)\r\n      //   console.log(filtered[0].alpha2Code)\r\n       setSelectedCountryCode(filtered[0].callingCodes.toString());\r\n       setFlag(filtered[0].flag)\r\n       setAlphaCode(filtered[0].alpha2Code)\r\n      \r\n   \r\n \r\n       if(alphaCode){\r\n    const  API_KEY = \"RkNhMzVFREhJV3RXZjBQbzFvTHJGQ090U1paQUdaamFPOEFtNzJEUw==\"\r\n      var headers = new Headers();\r\nheaders.append(\"X-CSCAPI-KEY\", API_KEY);\r\n\r\nvar requestOptions = {\r\n  method: 'GET',\r\n  headers: headers,\r\n  redirect: 'follow',\r\n \r\n};\r\nconst fetchStates = async() => {\r\n  const data = await fetch(`https://api.countrystatecity.in/v1/countries/${alphaCode}/states` , requestOptions);\r\n  const items = await data.json();\r\n  console.log(items)\r\n  setStateList(items)\r\n}\r\nfetchStates()\r\n\r\n\r\n\r\n\r\n}\r\n    }\r\n    },[selectedCountry , alphaCode])\r\n const clickHandler = (e) => {\r\n  setSelectedGender(e.target.innerHTML) \r\n\r\n }\r\n    return (\r\n        <div>\r\n      <center>\r\n        <Typography variant=\"h5\">Add your Personal Details</Typography>\r\n        <p>\r\n     Lorem ipsum dolor sit, amet consectetur adipisicing elit. Hic, laborum?\r\n        </p>\r\n       \r\n      </center>\r\n<div className=\"personalDetails\">\r\n     <Formik\r\n       initialValues={{ name: '',country: '', states : '', number: '' ,}}\r\n       validate={values => {\r\n        setSelectedCountry(values.country)\r\n         const errors = {};\r\n         if (!values.name) {\r\n           errors.name = 'Required';\r\n         } else if (\r\n          !/^[A-Za-z\\s]+$/i.test(values.name)\r\n          \r\n         ) {\r\n           errors.name = 'Invalid name';\r\n         }\r\n         return errors;\r\n         \r\n       }}\r\n       onSubmit={(values, { setSubmitting }) => {\r\n      \r\n        setSubmitting(false);\r\n         localStorage.setItem('name' , values.name);\r\n         localStorage.setItem('country' , values.country);\r\n         localStorage.setItem('state' , values.states);\r\n         localStorage.setItem('number' , selectedCountryCode + \"-\" + values.number);\r\n         localStorage.setItem('gender' , selectedGender);\r\n         return <Redirect to='/login'  />\r\n       }}\r\n     >\r\n       {({\r\n         values,\r\n         errors,\r\n         touched,\r\n         handleChange,\r\n         handleBlur,\r\n         handleSubmit,\r\n         isSubmitting,\r\n         \r\n  \r\n         \r\n       }) => (\r\n         <form onSubmit={handleSubmit}>\r\n           <div className=\"inputs\">\r\n             <label htmlFor=\"name\">Full Name</label>\r\n           <input\r\n             type=\"text\"\r\n             name=\"name\"\r\n             onChange={handleChange}\r\n             onBlur={handleBlur}\r\n             value={values.name}\r\n           />\r\n           {errors.name && touched.name && errors.name}\r\n           </div>\r\n       \r\n  \r\n{/*gender */}\r\n<div className=\"gender-group\">\r\n            <label>Gender</label>\r\n            <br />\r\n            <Button className=\"gender-btn\" onClick={clickHandler} variant=\"outlined\">Male</Button>&nbsp;\r\n            <Button className=\"gender-btn\"  onClick={clickHandler} variant=\"outlined\">Female</Button>&nbsp;\r\n            <Button className=\"gender-btn\"  onClick={clickHandler} variant=\"outlined\">Other</Button>&nbsp;\r\n          </div>\r\n        \r\n    {/* country*/ }\r\n    <div className=\"inputs\">\r\n    <label htmlFor=\"country\">Country</label>\r\n     <select required className=\"form-control\" id=\"country\" name=\"country\" value={values.country}  onChange={handleChange} >\r\n     <option value=\"first\">Please select</option>\r\n      \r\n   {countryList.map(single => (\r\n        \r\n      <option key={single.name} value={single.name} label={single.name}>{single.name}</option>\r\n     ))}\r\n       </select>\r\n       </div>\r\n       {/*state */}\r\n       <div className=\"inputs\">\r\n       <label htmlFor=\"states\">State</label>\r\n        <select required className=\"form-control\" id=\"states\" name=\"states\" value={values.states}  onChange={handleChange} >\r\n        <option value=\"first\" label=\"Select a state ... \" defaultValue=\"selected\" >Select a state ... </option>\r\n      \r\n           \r\n            \r\n          \r\n     {stateList.map(single => (\r\n        \r\n      <option key={single.id} value={single.name} label={single.name}>{single.name}</option>\r\n     ))}\r\n       </select> \r\n       </div>\r\n       <div className=\"inputWithIcon inputIconBg inputs\">\r\n         <label htmlFor=\"number\">Phone Number</label>\r\n         <div className=\"inputGroup\">\r\n         <img src={flag} alt=\"\" />\r\n        <span>+{selectedCountryCode}</span> \r\n        </div>\r\n  <input  required type=\"number\" className=\"numinput\" placeholder=\"Phone Number\" name=\"number\" value={values.number} onChange={handleChange}  />\r\n\r\n \r\n  \r\n</div>\r\n\r\n      \r\n           <br />\r\n           <br />\r\n            \r\n           <Button className=\"next-btn\" type=\"submit\" disabled={isSubmitting}>\r\n            Next\r\n          </Button>\r\n          {/* </Link> */}\r\n         </form>\r\n       )}\r\n      \r\n       </Formik>\r\n       </div>\r\n       <p>Already have an account?   <span style={{ color: \"orange\" }}>\r\n          Login In\r\n        </span></p>\r\n       \r\n     \r\n   </div>\r\n );\r\n \r\n  \r\n    \r\n       }\r\n\r\nexport default PersonalDetails\r\n"]},"metadata":{},"sourceType":"module"}