{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keerthu\\\\Desktop\\\\I Write Code\\\\React js\\\\squash-apps-form\\\\src\\\\Components\\\\PersonalDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Typography, Card, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport \"./PersonalDetails.css\";\nimport { Formik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { LaptopWindowsRounded } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PersonalDetails() {\n  _s();\n\n  const [countryList, setCountryList] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [selectedCountryCode, setSelectedCountryCode] = useState(\"\");\n  const [isClicked, setIsClicked] = useState(false);\n  const [stateList, setStateList] = useState([]);\n  const [flag, setFlag] = useState(\"\");\n  const [alphaCode, setAlphaCode] = useState(\"\");\n  const [enteredNumber, setEnteredNumber] = useState(\"\");\n  const [selectedGender, setSelectedGender] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await fetch(\"https://restcountries.eu/rest/v2/all\");\n      const items = await data.json();\n      console.log(items);\n      setCountryList(items);\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (selectedCountry) {\n      const filtered = countryList.filter(count => {\n        return count.name == selectedCountry;\n      }); // setHasCountryCode(true)\n\n      console.log(filtered); // console.log(filtered[0].callingCodes.toString());\n      // console.log(filtered[0].alpha2Code)\n\n      console.log(filtered[0].flag);\n      console.log(filtered[0].alpha2Code);\n      setSelectedCountryCode(filtered[0].callingCodes.toString());\n      setFlag(filtered[0].flag);\n      setAlphaCode(filtered[0].alpha2Code);\n\n      if (alphaCode) {\n        const API_KEY = \"RkNhMzVFREhJV3RXZjBQbzFvTHJGQ090U1paQUdaamFPOEFtNzJEUw==\";\n        var headers = new Headers();\n        headers.append(\"X-CSCAPI-KEY\", API_KEY);\n        var requestOptions = {\n          method: 'GET',\n          headers: headers,\n          redirect: 'follow'\n        };\n\n        const fetchStates = async () => {\n          const data = await fetch(`https://api.countrystatecity.in/v1/countries/${alphaCode}/states`, requestOptions);\n          const items = await data.json();\n          console.log(items);\n          setStateList(items);\n        };\n\n        fetchStates(); // fetch(`https://api.countrystatecity.in/v1/countries/${alphaCode}/states`, requestOptions)\n        //   .then(response => response.json() )\n        //   .then(result =>   setStateList(result))\n        //   .catch(error => console.log('error', error));\n      }\n    }\n  }, [selectedCountry, alphaCode]);\n\n  const clickHandler = e => {\n    setSelectedGender(e.target.innerHTML);\n    setIsClicked(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Add your Personal Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Hic, laborum?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"personalDetails\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          name: '',\n          country: '',\n          states: '',\n          number: ''\n        },\n        validate: values => {\n          setSelectedCountry(values.country);\n          const errors = {};\n\n          if (!values.name) {\n            errors.name = 'Required';\n          } else if (!/^[A-Za-z\\s]+$/i.test(values.name) //  !/^[!@#$&._%+-]$/i.test(values.name)\n          ) {\n              errors.name = 'Invalid name';\n            }\n\n          return errors;\n        },\n        onSubmit: (values, {\n          setSubmitting\n        }) => {\n          //  setTimeout(() => {\n          //    alert(JSON.stringify(values, null, 2));\n          //    setSubmitting(false);\n          //  }, 400);\n          setSubmitting(false);\n          localStorage.setItem('name', values.name);\n          localStorage.setItem('country', values.country);\n          localStorage.setItem('state', values.states);\n          localStorage.setItem('number', selectedCountryCode + \"-\" + values.number);\n          localStorage.setItem('gender', selectedGender);\n          window.location.href = \"./CompanyDetails\";\n        },\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting\n          /* and other goodies */\n\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 12\n            }, this), errors.name && touched.name && errors.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gender-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: `gender-btn ${isClicked && \"clicked\"}`,\n              onClick: clickHandler,\n              variant: \"outlined\",\n              children: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 13\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n              className: `gender-btn ${isClicked && \"clicked\"}`,\n              onClick: clickHandler,\n              variant: \"outlined\",\n              children: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 13\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n              className: `gender-btn ${isClicked && \"clicked\"}`,\n              onClick: clickHandler,\n              variant: \"outlined\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 13\n            }, this), \"\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"country\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: \"country\",\n              name: \"country\",\n              value: values.country,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                label: \"Select a country ... \",\n                defaultValue: \"selected\",\n                children: \"Select a country ... \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 9\n              }, this), countryList.map(single => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: single.name,\n                label: single.name,\n                children: single.name\n              }, single.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 7\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"states\",\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: \"states\",\n              name: \"states\",\n              value: values.states,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                label: \"Select a state ... \",\n                defaultValue: \"selected\",\n                children: \"Select a state ... \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 9\n              }, this), stateList.map(single => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: single.name,\n                label: single.name,\n                children: single.name\n              }, single.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 7\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputWithIcon inputIconBg inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"number\",\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputGroup\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: flag,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"+\", selectedCountryCode]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"numinput\",\n              placeholder: \"Phone Number\",\n              name: \"number\",\n              value: values.number,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"next-btn\",\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account?   \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"orange\"\n        },\n        children: \"Login In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PersonalDetails, \"tf2UvKoMM2Nc2si9E8L4xq/V2bI=\");\n\n_c = PersonalDetails;\nexport default PersonalDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonalDetails\");","map":{"version":3,"sources":["C:/Users/keerthu/Desktop/I Write Code/React js/squash-apps-form/src/Components/PersonalDetails.js"],"names":["React","useEffect","useState","Typography","Card","Button","makeStyles","Formik","Link","LaptopWindowsRounded","PersonalDetails","countryList","setCountryList","selectedCountry","setSelectedCountry","selectedCountryCode","setSelectedCountryCode","isClicked","setIsClicked","stateList","setStateList","flag","setFlag","alphaCode","setAlphaCode","enteredNumber","setEnteredNumber","selectedGender","setSelectedGender","fetchData","data","fetch","items","json","console","log","filtered","filter","count","name","alpha2Code","callingCodes","toString","API_KEY","headers","Headers","append","requestOptions","method","redirect","fetchStates","clickHandler","e","target","innerHTML","country","states","number","values","errors","test","setSubmitting","localStorage","setItem","window","location","href","touched","handleChange","handleBlur","handleSubmit","isSubmitting","map","single","id","color"],"mappings":"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","sourcesContent":["import React , {useEffect , useState} from 'react';\r\nimport { Typography, Card, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport \"./PersonalDetails.css\";\r\nimport { Formik } from 'formik';\r\nimport {Link } from 'react-router-dom';\r\nimport { LaptopWindowsRounded } from '@material-ui/icons';\r\n\r\nfunction PersonalDetails() {\r\n  const[countryList , setCountryList] = useState([]);\r\n  const [selectedCountry , setSelectedCountry] = useState(\"\");\r\n  const [selectedCountryCode , setSelectedCountryCode] = useState(\"\");\r\n  const [isClicked , setIsClicked] = useState(false);\r\n  const [stateList , setStateList] = useState([])\r\n  const [flag , setFlag] = useState(\"\")\r\n  const [alphaCode , setAlphaCode] = useState(\"\")\r\n  const [enteredNumber , setEnteredNumber] = useState(\"\")\r\n  const [selectedGender , setSelectedGender] = useState(\"\")\r\n  useEffect(() =>{\r\n    const fetchData = async() => {\r\n      const data = await fetch(\"https://restcountries.eu/rest/v2/all\");\r\n      const items = await data.json();\r\n      console.log(items)\r\n      setCountryList(items)\r\n    }\r\n    fetchData()\r\n  } , []);\r\n\r\n  useEffect(() =>{\r\n   \r\n    if(selectedCountry){\r\n      const filtered =   countryList.filter(count =>{ return count.name == selectedCountry});\r\n      // setHasCountryCode(true)\r\n      console.log(filtered);\r\n    \r\n        // console.log(filtered[0].callingCodes.toString());\r\n        // console.log(filtered[0].alpha2Code)\r\n        console.log(filtered[0].flag)\r\n        console.log(filtered[0].alpha2Code)\r\n       setSelectedCountryCode(filtered[0].callingCodes.toString());\r\n       setFlag(filtered[0].flag)\r\n       setAlphaCode(filtered[0].alpha2Code)\r\n      \r\n   \r\n \r\n       if(alphaCode){\r\n    const  API_KEY = \"RkNhMzVFREhJV3RXZjBQbzFvTHJGQ090U1paQUdaamFPOEFtNzJEUw==\"\r\n      var headers = new Headers();\r\nheaders.append(\"X-CSCAPI-KEY\", API_KEY);\r\n\r\nvar requestOptions = {\r\n  method: 'GET',\r\n  headers: headers,\r\n  redirect: 'follow',\r\n \r\n};\r\nconst fetchStates = async() => {\r\n  const data = await fetch(`https://api.countrystatecity.in/v1/countries/${alphaCode}/states` , requestOptions);\r\n  const items = await data.json();\r\n  console.log(items)\r\n  setStateList(items)\r\n}\r\nfetchStates()\r\n\r\n\r\n\r\n// fetch(`https://api.countrystatecity.in/v1/countries/${alphaCode}/states`, requestOptions)\r\n//   .then(response => response.json() )\r\n//   .then(result =>   setStateList(result))\r\n//   .catch(error => console.log('error', error));\r\n\r\n}\r\n    }\r\n    },[selectedCountry , alphaCode])\r\n const clickHandler = (e) => {\r\n  setSelectedGender(e.target.innerHTML) \r\n  setIsClicked(true)\r\n }\r\n    return (\r\n        <div>\r\n      <center>\r\n        <Typography variant=\"h5\">Add your Personal Details</Typography>\r\n        <p>\r\n     Lorem ipsum dolor sit, amet consectetur adipisicing elit. Hic, laborum?\r\n        </p>\r\n      </center>\r\n<div className=\"personalDetails\">\r\n     <Formik\r\n       initialValues={{ name: '',country: '', states : '', number: '' ,}}\r\n       validate={values => {\r\n        setSelectedCountry(values.country)\r\n         const errors = {};\r\n         if (!values.name) {\r\n           errors.name = 'Required';\r\n         } else if (\r\n          !/^[A-Za-z\\s]+$/i.test(values.name)\r\n          //  !/^[!@#$&._%+-]$/i.test(values.name)\r\n         ) {\r\n           errors.name = 'Invalid name';\r\n         }\r\n         return errors;\r\n         \r\n       }}\r\n       onSubmit={(values, { setSubmitting }) => {\r\n        //  setTimeout(() => {\r\n        //    alert(JSON.stringify(values, null, 2));\r\n        //    setSubmitting(false);\r\n        //  }, 400);\r\n        setSubmitting(false);\r\n         localStorage.setItem('name' , values.name);\r\n         localStorage.setItem('country' , values.country);\r\n         localStorage.setItem('state' , values.states);\r\n         localStorage.setItem('number' , selectedCountryCode + \"-\" + values.number);\r\n         localStorage.setItem('gender' , selectedGender);\r\n             window.location.href = \"./CompanyDetails\"\r\n       }}\r\n     >\r\n       {({\r\n         values,\r\n         errors,\r\n         touched,\r\n         handleChange,\r\n         handleBlur,\r\n         handleSubmit,\r\n         isSubmitting,\r\n         \r\n         /* and other goodies */\r\n         \r\n       }) => (\r\n         <form onSubmit={handleSubmit}>\r\n           <div className=\"inputs\">\r\n             <label htmlFor=\"name\">Full Name</label>\r\n           <input\r\n             type=\"text\"\r\n             name=\"name\"\r\n             onChange={handleChange}\r\n             onBlur={handleBlur}\r\n             value={values.name}\r\n           />\r\n           {errors.name && touched.name && errors.name}\r\n           </div>\r\n           {/* <input\r\n             type=\"password\"\r\n             name=\"password\"\r\n             onChange={handleChange}\r\n             onBlur={handleBlur}\r\n             value={values.password}\r\n           />\r\n           {errors.password && touched.password && errors.password} */}\r\n          \r\n           {/* my own form */}\r\n  \r\n{/*gender */}\r\n<div className=\"gender-group\">\r\n            <label>Gender</label>\r\n            <br />\r\n            <Button className={`gender-btn ${isClicked && \"clicked\"}`}  onClick={clickHandler} variant=\"outlined\">Male</Button>&nbsp;\r\n            <Button className={`gender-btn ${isClicked && \"clicked\"}`} onClick={clickHandler} variant=\"outlined\">Female</Button>&nbsp;\r\n            <Button className={`gender-btn ${isClicked && \"clicked\"}`} onClick={clickHandler} variant=\"outlined\">Other</Button>&nbsp;\r\n          </div>\r\n    {/* country*/ }\r\n    <div className=\"inputs\">\r\n    <label htmlFor=\"country\">Country</label>\r\n     <select  className=\"form-control\" id=\"country\" name=\"country\" value={values.country}  onChange={handleChange} >\r\n        <option value=\"0\" label=\"Select a country ... \" defaultValue=\"selected\" >Select a country ... </option>\r\n      \r\n           \r\n            \r\n          \r\n     {countryList.map(single => (\r\n        \r\n      <option key={single.name} value={single.name} label={single.name}>{single.name}</option>\r\n     ))}\r\n       </select>\r\n       </div>\r\n       {/*state */}\r\n       <div className=\"inputs\">\r\n       <label htmlFor=\"states\">State</label>\r\n        <select  className=\"form-control\" id=\"states\" name=\"states\" value={values.states}  onChange={handleChange} >\r\n        <option value=\"0\" label=\"Select a state ... \" defaultValue=\"selected\" >Select a state ... </option>\r\n      \r\n           \r\n            \r\n          \r\n     {stateList.map(single => (\r\n        \r\n      <option key={single.id} value={single.name} label={single.name}>{single.name}</option>\r\n     ))}\r\n       </select> \r\n       </div>\r\n       <div className=\"inputWithIcon inputIconBg inputs\">\r\n         <label htmlFor=\"number\">Phone Number</label>\r\n         <div className=\"inputGroup\">\r\n         <img src={flag} alt=\"\" />\r\n        <span>+{selectedCountryCode}</span> \r\n        </div>\r\n  <input type=\"number\" className=\"numinput\" placeholder=\"Phone Number\" name=\"number\" value={values.number} onChange={handleChange}  />\r\n  {/* <span>{selectedCountryCode}</span> */}\r\n  {/* <i className=\"fa fa-phone fa-lg fa-fw\" aria-hidden=\"true\"></i> */}\r\n \r\n  \r\n</div>\r\n\r\n       {/* <button type=\"submit\" disabled={isSubmitting}>\r\n             Submit\r\n           </button> */}\r\n           <br />\r\n           <br />\r\n               {/* <Link to=\"/companydetails\"> */}\r\n           <Button className=\"next-btn\" type=\"submit\" disabled={isSubmitting}>\r\n            Next\r\n          </Button>\r\n          {/* </Link> */}\r\n         </form>\r\n       )}\r\n      \r\n       </Formik>\r\n       </div>\r\n       <p>Already have an account?   <span style={{ color: \"orange\" }}>\r\n          Login In\r\n        </span></p>\r\n       \r\n       {/* <h1>{selectedCountry}</h1> */}\r\n       {/* {hasCountryCode ?  <h1>{selectedCountryCode}</h1> : null } */}\r\n      \r\n       {/* <h1>{selectedCountryCode.countrycode}</h1> */}\r\n       {/* <h1>{selectedCountryCode.map(single => {\r\n         <div>\r\n        <p>{single.name}</p>\r\n        <p>{single.alpha2Code}</p>\r\n         </div>\r\n       })}</h1> */}\r\n       {/* <h1>{selectedCountryCode}</h1> */}\r\n       {/* <h1>{selectedCountryCode}</h1>\r\n       <img src={flag} alt=\"\" /> */}\r\n       \r\n       {/* <h1>{stateList}</h1> */}\r\n          {/* {stateList.map(single => (\r\n        \r\n       <h1>{single.name}</h1>\r\n       ))}   */}\r\n   </div>\r\n );\r\n \r\n  \r\n    \r\n       }\r\n\r\nexport default PersonalDetails\r\n"]},"metadata":{},"sourceType":"module"}